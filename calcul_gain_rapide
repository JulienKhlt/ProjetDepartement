#Les prix précédents sont donnés ainsi que les nouveaux prix et les anciennes demandes

function quick_gestion_cap(Capacites, dem_0, diff_prob, prob0, leg_to_it,nb_pas_tps)
    dem1=dem0
    for i=1:length(Capacites)
        s=0
        for j in leg_to_it[i]
            #dem1 est le nombre de personnes en plus par rapport à la dem0
            for k in 1:nb_pas_temps
                dem1[k][j]=diff_prob[k][j]*dem_0[k][j]/prob0[k][j]
                s+=dem1[k][j]+dem_0[k][j]
            end
        end
        if s>Capacites[j]
            for j in leg_to_it[i]
                for k in 1:nb_pas_temps
                    alpha=Capacites[i]/s
                    dem1[k][j]=(dem1[k][j]+dem_0[k][j])*alpha-dem1[k][j]
                end
            end
        end
    end
end

function quick_gain(gain0,prix_0,prix_1,dem_0,Capacites,Itineraires,proba_0,proba_1,leg_to_it,nb_pas_tps)
    diff_prob=proba_1-proba_0
    dem_1=quick_gestion_cap(Capacites,dem_0,diff_prob,prob0,leg_to_it,nb_pas_tps)
    gain1=gain0
    for j in 1:nb_pas_tps
        gain1+=sum((prix_1-prix_0)[j].*dem_1[j])
    end
end
